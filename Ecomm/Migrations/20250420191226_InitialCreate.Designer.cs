// <auto-generated />
using System;
using Ecomm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecomm.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250420191226_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecomm.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Ecomm.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Shoes, sneakers, and other footwear",
                            Name = "Footwear"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Electronic devices and accessories",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fashion accessories and bags",
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Home appliances and kitchen items",
                            Name = "Home & Kitchen"
                        });
                });

            modelBuilder.Entity("Ecomm.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Classic Nike Air Max sneakers with air cushioning technology for maximum comfort.",
                            ImageUrl = "/images/products/nike-air-max.png",
                            Name = "Nike Air Max",
                            Price = 129.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "High-quality wireless headphones with noise cancellation and 20-hour battery life.",
                            ImageUrl = "/images/products/wireless-headphones.png",
                            Name = "Wireless Headphones",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Feature-rich smartwatch with heart rate monitoring, GPS, and water resistance.",
                            ImageUrl = "./images/products/smart-watch.png",
                            Name = "Smart Watch",
                            Price = 199.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Durable laptop backpack with multiple compartments and USB charging port.",
                            ImageUrl = "/images/products/laptop-backpack.png",
                            Name = "Laptop Backpack",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "Programmable coffee maker with 12-cup capacity and built-in grinder.",
                            ImageUrl = "/images/products/coffee-maker.png",
                            Name = "Coffee Maker",
                            Price = 79.99m
                        });
                });

            modelBuilder.Entity("Ecomm.Models.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WishlistItems");
                });

            modelBuilder.Entity("Ecomm.Models.CartItem", b =>
                {
                    b.HasOne("Ecomm.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecomm.Models.Product", b =>
                {
                    b.HasOne("Ecomm.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecomm.Models.WishlistItem", b =>
                {
                    b.HasOne("Ecomm.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecomm.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
