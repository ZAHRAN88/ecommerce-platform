@using System.IO
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Home";
}

<!-- Hero Section -->
<section class="relative bg-gradient-to-r from-primary-600 to-primary-800 text-white">
    <div class="absolute inset-0 bg-black opacity-50"></div>
    <div class="container mx-auto px-4 py-24 relative">
        <div class="max-w-3xl">
            <h1 class="text-4xl md:text-6xl font-bold mb-6">Discover Amazing Products</h1>
            <p class="text-xl mb-8 text-gray-100">Shop the latest trends and find incredible deals on our curated collection of products.</p>
            <a href="#featured" class="inline-block bg-white text-primary-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
                Shop Now
            </a>
        </div>
    </div>
</section>



<!-- Featured Products -->
<section id="featured" class="py-16">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center mb-12">
            <h2 class="text-3xl font-bold">Featured Products</h2>
            <a href="#" class="text-primary-600 hover:text-primary-700 font-semibold flex items-center">
                View All <i class="fas fa-arrow-right ml-2"></i>
            </a>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            @foreach (var product in Model.Take(6))
            {
                <div class="bg-white rounded-xl shadow-lg overflow-hidden group hover:shadow-xl transition-shadow">
                    <a href="@Url.Action("Details", "Home", new { id = product.Id })" class="block">
                        <div class="relative">
                            <img src="@product.ImageUrl" 
                                 onerror="this.onerror=null; this.src='/images/products/default-product.svg';"
                                 alt="@product.Name" 
                                 class="w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300"/>
                            @if (product.Price < 50) // Example condition for "Best Deal" badge
                            {
                                <div class="absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-semibold">
                                    Best Deal
                                </div>
                            }
                        </div>
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-gray-800 group-hover:text-primary-600 transition-colors mb-2">@product.Name</h3>
                            <p class="text-gray-600 line-clamp-2 mb-4">@product.Description</p>
                            <div class="flex items-center justify-between">
                                <span class="text-2xl font-bold text-primary-600">$@product.Price.ToString("F2")</span>
                                <div class="flex space-x-2">
                                    <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post" class="add-to-wishlist-form">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="bg-gray-100 hover:bg-gray-200 text-gray-700 p-2 rounded-full transition-colors">
                                            <i class="fas fa-heart"></i>
                                        </button>
                                    </form>
                                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="add-to-cart-form">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <input type="hidden" name="quantity" value="1" />
                                        <button type="submit" class="bg-primary-500 hover:bg-primary-600 text-white p-2 rounded-full transition-colors">
                                            <i class="fas fa-cart-plus"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
</section>

<!-- Promotional Banners -->
<section class="py-16 bg-gray-50">
    <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div class="bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl overflow-hidden relative">
                <div class="absolute inset-0 bg-black opacity-20"></div>
                <div class="p-8 relative text-white">
                    <h3 class="text-2xl font-bold mb-4">New Arrivals</h3>
                    <p class="mb-6">Discover our latest collection of trending products</p>
                    <a href="#" class="inline-block bg-white text-purple-600 px-6 py-2 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
                        Shop Now
                    </a>
                </div>
            </div>
            <div class="bg-gradient-to-r from-primary-500 to-primary-700 rounded-xl overflow-hidden relative">
                <div class="absolute inset-0 bg-black opacity-20"></div>
                <div class="p-8 relative text-white">
                    <h3 class="text-2xl font-bold mb-4">Special Offers</h3>
                    <p class="mb-6">Get up to 50% off on selected items</p>
                    <a href="#" class="inline-block bg-white text-primary-600 px-6 py-2 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
                        View Deals
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Features Section -->
<section id="about" class="py-16">
    <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold text-center mb-12">Why Choose Us</h2>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div class="text-center">
                <div class="bg-primary-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-truck text-2xl text-primary-600"></i>
                </div>
                <h3 class="text-lg font-semibold mb-2">Free Shipping</h3>
                <p class="text-gray-600">On orders over $50</p>
            </div>
            <div class="text-center">
                <div class="bg-primary-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-undo text-2xl text-primary-600"></i>
                </div>
                <h3 class="text-lg font-semibold mb-2">Easy Returns</h3>
                <p class="text-gray-600">30-day return policy</p>
            </div>
            <div class="text-center">
                <div class="bg-primary-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-lock text-2xl text-primary-600"></i>
                </div>
                <h3 class="text-lg font-semibold mb-2">Secure Payment</h3>
                <p class="text-gray-600">100% secure checkout</p>
            </div>
<div class="text-center">
                <div class="bg-primary-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-headset text-2xl text-primary-600"></i>
                </div>
                <h3 class="text-lg font-semibold mb-2">24/7 Support</h3>
                <p class="text-gray-600">Dedicated support</p>
            </div>
        </div>
</div>
</section>

@section Scripts {
    <script>
        // Add to Cart Form Handler
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const button = form.querySelector('button');
                const originalContent = button.innerHTML;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: new FormData(form),
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        if (data.success) {
                            button.innerHTML = '<i class="fas fa-check"></i>';
                            button.classList.remove('bg-primary-500', 'hover:bg-primary-600');
                            button.classList.add('bg-green-500', 'hover:bg-green-600');
                            
                            if (window.updateCartCountAfterAdd) {
                                window.updateCartCountAfterAdd();
                            }
                            
                            setTimeout(() => {
                                button.disabled = false;
                                button.innerHTML = originalContent;
                                button.classList.remove('bg-green-500', 'hover:bg-green-600');
                                button.classList.add('bg-primary-500', 'hover:bg-primary-600');
                            }, 2000);
                        }
                    } else {
                        throw new Error('Failed to add to cart');
                    }
                } catch (error) {
                    button.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
                    button.classList.remove('bg-primary-500', 'hover:bg-primary-600');
                    button.classList.add('bg-red-500', 'hover:bg-red-600');
                    
                    setTimeout(() => {
                        button.disabled = false;
                        button.innerHTML = originalContent;
                        button.classList.remove('bg-red-500', 'hover:bg-red-600');
                        button.classList.add('bg-primary-500', 'hover:bg-primary-600');
                    }, 2000);
                }
            });
        });

        // Add to Wishlist Form Handler
        document.querySelectorAll('.add-to-wishlist-form').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const button = form.querySelector('button');
                const originalContent = button.innerHTML;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: new FormData(form),
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        if (data.success) {
                            button.innerHTML = '<i class="fas fa-check"></i>';
                            button.classList.remove('bg-gray-100', 'hover:bg-gray-200');
                            button.classList.add('bg-red-100', 'hover:bg-red-200');
                            
                            if (window.updateWishlistCountAfterAdd) {
                                window.updateWishlistCountAfterAdd();
                            }
                            
                            setTimeout(() => {
                                button.disabled = false;
                                button.innerHTML = originalContent;
                                button.classList.remove('bg-red-100', 'hover:bg-red-200');
                                button.classList.add('bg-gray-100', 'hover:bg-gray-200');
                            }, 2000);
                        }
                    } else {
                        throw new Error('Failed to add to wishlist');
                    }
                } catch (error) {
                    button.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
                    button.classList.remove('bg-gray-100', 'hover:bg-gray-200');
                    button.classList.add('bg-red-500', 'hover:bg-red-600');
                    
                    setTimeout(() => {
                        button.disabled = false;
                        button.innerHTML = originalContent;
                        button.classList.remove('bg-red-500', 'hover:bg-red-600');
                        button.classList.add('bg-gray-100', 'hover:bg-gray-200');
                    }, 2000);
                }
            });
        });
    </script>
}
