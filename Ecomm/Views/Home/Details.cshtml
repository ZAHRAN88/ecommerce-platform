@model Product

@{
    ViewData["Title"] = Model.Name;
    var relatedProducts = ViewData["RelatedProducts"] as List<Product> ?? new List<Product>();
}

<div class="container mx-auto px-4 py-8">
    <!-- Breadcrumb -->
    <nav class="text-gray-500 text-sm mb-8">
        <ol class="list-none p-0 flex items-center space-x-2">
            <li><a href="/" class="hover:text-primary-600 transition-colors">Home</a></li>
            <li><i class="fas fa-chevron-right text-xs"></i></li>
            <li><a href="#" class="hover:text-primary-600 transition-colors">Category</a></li>
            <li><i class="fas fa-chevron-right text-xs"></i></li>
            <li class="text-gray-700">@Model.Name</li>
        </ol>
    </nav>

    <!-- Product Details -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 mb-16">
        <!-- Product Images -->
        <div class="space-y-4">
            <div class="aspect-w-1 aspect-h-1 bg-white rounded-xl overflow-hidden">
                <img src="@Model.ImageUrl" 
                     onerror="this.onerror=null; this.src='/images/products/default-product.svg';"
                     alt="@Model.Name" 
                     class="w-full h-full object-cover"
                     id="main-product-image">
            </div>
            <div class="grid grid-cols-4 gap-4">
                <button class="thumbnail-btn bg-white rounded-lg overflow-hidden border-2 border-transparent hover:border-primary-500 transition-colors">
                    <img src="@Model.ImageUrl" 
                         onerror="this.onerror=null; this.src='/images/products/default-product.svg';"
                         alt="@Model.Name" 
                         class="w-full h-24 object-cover">
                </button>
                <!-- Add more thumbnail buttons for additional product images -->
            </div>
        </div>

        <!-- Product Info -->
        <div class="space-y-6">
            <div class="space-y-4">
                <h1 class="text-3xl font-bold text-gray-900">@Model.Name</h1>
                <div class="flex items-center space-x-4">
                    <div class="flex items-center">
                        <div class="flex text-yellow-400">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                        </div>
                        <span class="ml-2 text-gray-600">(24 reviews)</span>
                    </div>
                    <span class="text-gray-300">|</span>
                    <span class="text-green-600">In Stock</span>
                </div>
                <div class="text-3xl font-bold text-primary-600">
                    $@Model.Price.ToString("F2")
                    @if (Model.Price < 50)
                    {
                        <span class="ml-4 text-sm bg-red-500 text-white px-3 py-1 rounded-full">Best Deal</span>
                    }
                </div>
            </div>

            <div class="border-t border-b border-gray-200 py-6">
                <p class="text-gray-700 leading-relaxed">@Model.Description</p>
            </div>

            <div class="space-y-6">
                <div class="flex items-center space-x-4">
                    <div class="w-32">
                        <label for="quantity" class="block text-sm font-medium text-gray-700 mb-1">Quantity</label>
                        <div class="custom-number-input h-10 w-full">
                            <div class="flex flex-row h-10 w-full rounded-lg relative bg-transparent">
                                <button data-action="decrement" class="bg-gray-100 text-gray-600 hover:bg-gray-200 h-full w-20 rounded-l outline-none transition-colors">
                                    <span class="m-auto text-2xl font-thin">âˆ’</span>
                                </button>
                                <input type="number" id="quantity" name="quantity" 
                                       class="outline-none focus:outline-none text-center w-full bg-gray-50 font-semibold text-md hover:text-black focus:text-black md:text-base cursor-default flex items-center text-gray-700" 
                                       value="1" min="1">
                                <button data-action="increment" class="bg-gray-100 text-gray-600 hover:bg-gray-200 h-full w-20 rounded-r outline-none transition-colors">
                                    <span class="m-auto text-2xl font-thin">+</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex items-center space-x-4">
                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="add-to-cart-form flex-1">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <input type="hidden" name="quantity" value="1" id="cart-quantity" />
                        <button type="submit" class="w-full bg-primary-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-primary-700 transition-colors flex items-center justify-center space-x-2">
                            <i class="fas fa-cart-plus"></i>
                            <span>Add to Cart</span>
                        </button>
                    </form>
                    <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post" class="add-to-wishlist-form">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <button type="submit" class="bg-gray-100 text-gray-700 p-3 rounded-lg hover:bg-gray-200 transition-colors">
                            <i class="fas fa-heart text-xl"></i>
                        </button>
                    </form>
                </div>
            </div>

            <!-- Product Features -->
            <div class="border-t border-gray-200 pt-6 space-y-4">
                <h3 class="text-lg font-semibold">Product Features</h3>
                <ul class="space-y-2">
                    <li class="flex items-start space-x-2">
                        <i class="fas fa-check text-green-500 mt-1"></i>
                        <span class="text-gray-600">High-quality materials</span>
                    </li>
                    <li class="flex items-start space-x-2">
                        <i class="fas fa-check text-green-500 mt-1"></i>
                        <span class="text-gray-600">Durable construction</span>
                    </li>
                    <li class="flex items-start space-x-2">
                        <i class="fas fa-check text-green-500 mt-1"></i>
                        <span class="text-gray-600">Easy to maintain</span>
                    </li>
                </ul>
            </div>

            <!-- Delivery Info -->
            <div class="border-t border-gray-200 pt-6 space-y-4">
                <div class="flex items-center space-x-4">
                    <div class="flex-1 flex items-center space-x-2">
                        <i class="fas fa-truck text-primary-600"></i>
                        <span class="text-gray-600">Free delivery on orders over $50</span>
                    </div>
                    <div class="flex-1 flex items-center space-x-2">
                        <i class="fas fa-undo text-primary-600"></i>
                        <span class="text-gray-600">30-day return policy</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Description Tabs -->
    <div class="mb-16">
        <div class="border-b border-gray-200">
            <nav class="flex space-x-8" aria-label="Tabs">
                <button class="tab-btn border-b-2 border-primary-600 py-4 px-1 text-sm font-medium text-primary-600" data-tab="description">
                    Description
                </button>
                <button class="tab-btn border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="specifications">
                    Specifications
                </button>
                <button class="tab-btn border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="reviews">
                    Reviews
                </button>
            </nav>
        </div>

        <div class="py-8">
            <div id="description" class="tab-content">
                <div class="prose max-w-none">
                    <p class="text-gray-600 leading-relaxed">
                        @Model.Description
                    </p>
                </div>
            </div>

            <div id="specifications" class="tab-content hidden">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div>
                        <h3 class="text-lg font-semibold mb-4">Technical Specifications</h3>
                        <dl class="space-y-4">
                            <div class="flex">
                                <dt class="w-1/3 text-gray-500">Brand</dt>
                                <dd class="w-2/3 text-gray-900">Brand Name</dd>
                            </div>
                            <div class="flex">
                                <dt class="w-1/3 text-gray-500">Model</dt>
                                <dd class="w-2/3 text-gray-900">Model Number</dd>
                            </div>
                            <!-- Add more specifications as needed -->
                        </dl>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold mb-4">Additional Information</h3>
                        <dl class="space-y-4">
                            <div class="flex">
                                <dt class="w-1/3 text-gray-500">Weight</dt>
                                <dd class="w-2/3 text-gray-900">1.5 kg</dd>
                            </div>
                            <div class="flex">
                                <dt class="w-1/3 text-gray-500">Dimensions</dt>
                                <dd class="w-2/3 text-gray-900">10 x 20 x 30 cm</dd>
                            </div>
                            <!-- Add more information as needed -->
                        </dl>
                    </div>
                </div>
            </div>

            <div id="reviews" class="tab-content hidden">
                <div class="space-y-8">
                    <!-- Review Summary -->
                    <div class="flex items-center space-x-8">
                        <div class="text-center">
                            <div class="text-5xl font-bold text-gray-900">4.8</div>
                            <div class="flex text-yellow-400 justify-center mt-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                            </div>
                            <div class="text-gray-500 mt-1">24 reviews</div>
                        </div>
                        <div class="flex-1">
                            <div class="space-y-2">
                                @for (int i = 5; i >= 1; i--)
                                {
                                    <div class="flex items-center">
                                        <div class="w-12 text-sm text-gray-600">@i stars</div>
                                        <div class="flex-1 mx-4">
                                            <div class="h-2 rounded-full bg-gray-200">
                                                <div class="h-2 rounded-full bg-yellow-400" style="width: @(i * 20)%"></div>
                                            </div>
                                        </div>
                                        <div class="w-12 text-sm text-gray-600">@(i * 4)</div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Review List -->
                    <div class="space-y-8">
                        <!-- Sample Review -->
                        <div class="border-b border-gray-200 pb-8">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center space-x-4">
                                    <div class="h-12 w-12 rounded-full bg-gray-200 flex items-center justify-center">
                                        <i class="fas fa-user text-gray-400"></i>
                                    </div>
                                    <div>
                                        <h4 class="text-sm font-semibold text-gray-900">John Doe</h4>
                                        <div class="flex items-center mt-1">
                                            <div class="flex text-yellow-400">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star text-sm"></i>
                                                }
                                            </div>
                                            <span class="ml-2 text-sm text-gray-500">2 months ago</span>
                                        </div>
                                    </div>
                                </div>
                                <button class="text-gray-400 hover:text-gray-500">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                            </div>
                            <p class="text-gray-600">Great product! Exactly what I was looking for. The quality is excellent and it arrived quickly.</p>
                        </div>
                        <!-- Add more reviews as needed -->
                    </div>

                    <!-- Write Review Button -->
                    <div class="text-center">
                        <button class="inline-flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 transition-colors">
                            Write a Review
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    <div>
        <h2 class="text-2xl font-bold mb-8">You May Also Like</h2>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
            @foreach (var product in relatedProducts.Take(4).Where(p => p.Id != Model.Id))
            {
                <div class="bg-white rounded-xl shadow-lg overflow-hidden group hover:shadow-xl transition-shadow">
                    <a href="@Url.Action("Details", "Home", new { id = product.Id })" class="block">
                        <div class="relative">
                            <img src="@product.ImageUrl" 
                                 onerror="this.onerror=null; this.src='/images/products/default-product.svg';"
                                 alt="@product.Name" 
                                 class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"/>
                            @if (product.Price < 50)
                            {
                                <div class="absolute top-2 left-2 bg-red-500 text-white px-2 py-1 rounded-full text-xs font-semibold">
                                    Best Deal
                                </div>
                            }
                        </div>
                        <div class="p-4">
                            <h3 class="text-lg font-semibold text-gray-800 group-hover:text-primary-600 transition-colors line-clamp-1">@product.Name</h3>
                            <p class="text-gray-600 text-sm mt-1 line-clamp-2">@product.Description</p>
                            <div class="mt-4 flex items-center justify-between">
                                <span class="text-lg font-bold text-primary-600">$@product.Price.ToString("F2")</span>
                                <form asp-controller="Cart" asp-action="AddToCart" method="post" class="add-to-cart-form-related">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <input type="hidden" name="quantity" value="1" />
                                    <button type="submit" class="bg-primary-500 hover:bg-primary-600 text-white p-2 rounded-full transition-colors">
                                        <i class="fas fa-cart-plus"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Quantity Input Handler
        const quantityInput = document.getElementById('quantity');
        const cartQuantityInput = document.getElementById('cart-quantity');

        document.querySelectorAll('[data-action]').forEach(button => {
            button.addEventListener('click', () => {
                const action = button.dataset.action;
                const currentValue = parseInt(quantityInput.value);
                
                if (action === 'decrement' && currentValue > 1) {
                    quantityInput.value = currentValue - 1;
                } else if (action === 'increment') {
                    quantityInput.value = currentValue + 1;
                }
                
                cartQuantityInput.value = quantityInput.value;
            });
        });

        quantityInput.addEventListener('change', () => {
            const value = parseInt(quantityInput.value);
            if (value < 1) quantityInput.value = 1;
            cartQuantityInput.value = quantityInput.value;
        });

        // Tab Handler
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                const tab = button.dataset.tab;
                
                // Update button states
                tabButtons.forEach(btn => {
                    if (btn.dataset.tab === tab) {
                        btn.classList.add('border-primary-600', 'text-primary-600');
                        btn.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                    } else {
                        btn.classList.remove('border-primary-600', 'text-primary-600');
                        btn.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                    }
                });
                
                // Update content visibility
                tabContents.forEach(content => {
                    if (content.id === tab) {
                        content.classList.remove('hidden');
                    } else {
                        content.classList.add('hidden');
                    }
                });
            });
        });

        // Add to Cart Form Handler
        document.querySelector('.add-to-cart-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const button = e.target.querySelector('button');
            const originalContent = button.innerHTML;
            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span>Adding...</span>';
            
            try {
                const response = await fetch(e.target.action, {
                    method: 'POST',
                    body: new FormData(e.target),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        button.innerHTML = '<i class="fas fa-check"></i><span>Added to Cart!</span>';
                        button.classList.remove('bg-primary-600', 'hover:bg-primary-700');
                        button.classList.add('bg-green-500', 'hover:bg-green-600');
                        
                        if (window.updateCartCountAfterAdd) {
                            window.updateCartCountAfterAdd();
                        }
                        
                        setTimeout(() => {
                            button.disabled = false;
                            button.innerHTML = originalContent;
                            button.classList.remove('bg-green-500', 'hover:bg-green-600');
                            button.classList.add('bg-primary-600', 'hover:bg-primary-700');
                        }, 2000);
                    }
                } else {
                    throw new Error('Failed to add to cart');
                }
            } catch (error) {
                button.innerHTML = '<i class="fas fa-exclamation-triangle"></i><span>Failed to Add</span>';
                button.classList.remove('bg-primary-600', 'hover:bg-primary-700');
                button.classList.add('bg-red-500', 'hover:bg-red-600');
                
                setTimeout(() => {
                    button.disabled = false;
                    button.innerHTML = originalContent;
                    button.classList.remove('bg-red-500', 'hover:bg-red-600');
                    button.classList.add('bg-primary-600', 'hover:bg-primary-700');
                }, 2000);
            }
        });

        // Add to Wishlist Form Handler
        document.querySelector('.add-to-wishlist-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const button = e.target.querySelector('button');
            const originalContent = button.innerHTML;
            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            
            try {
                const response = await fetch(e.target.action, {
                    method: 'POST',
                    body: new FormData(e.target),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        button.innerHTML = '<i class="fas fa-check"></i>';
                        button.classList.remove('bg-gray-100', 'hover:bg-gray-200');
                        button.classList.add('bg-red-100', 'hover:bg-red-200');
                        
                        if (window.updateWishlistCountAfterAdd) {
                            window.updateWishlistCountAfterAdd();
                        }
                        
                        setTimeout(() => {
                            button.disabled = false;
                            button.innerHTML = originalContent;
                            button.classList.remove('bg-red-100', 'hover:bg-red-200');
                            button.classList.add('bg-gray-100', 'hover:bg-gray-200');
                        }, 2000);
                    }
                } else {
                    throw new Error('Failed to add to wishlist');
                }
            } catch (error) {
                button.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
                button.classList.remove('bg-gray-100', 'hover:bg-gray-200');
                button.classList.add('bg-red-500', 'hover:bg-red-600');
                
                setTimeout(() => {
                    button.disabled = false;
                    button.innerHTML = originalContent;
                    button.classList.remove('bg-red-500', 'hover:bg-red-600');
                    button.classList.add('bg-gray-100', 'hover:bg-gray-200');
                }, 2000);
            }
        });

        // Add to Cart Handler for Related Products
        document.querySelectorAll('.add-to-cart-form-related').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const button = e.target.querySelector('button');
                const originalContent = button.innerHTML;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                try {
                    const response = await fetch(e.target.action, {
                        method: 'POST',
                        body: new FormData(e.target),
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        if (data.success) {
                            button.innerHTML = '<i class="fas fa-check"></i>';
                            button.classList.remove('bg-primary-500', 'hover:bg-primary-600');
                            button.classList.add('bg-green-500', 'hover:bg-green-600');
                            
                            if (window.updateCartCountAfterAdd) {
                                window.updateCartCountAfterAdd();
                            }
                            
                            setTimeout(() => {
                                button.disabled = false;
                                button.innerHTML = originalContent;
                                button.classList.remove('bg-green-500', 'hover:bg-green-600');
                                button.classList.add('bg-primary-500', 'hover:bg-primary-600');
                            }, 2000);
                        }
                    } else {
                        throw new Error('Failed to add to cart');
                    }
                } catch (error) {
                    button.innerHTML = '<i class="fas fa-exclamation-triangle"></i>';
                    button.classList.remove('bg-primary-500', 'hover:bg-primary-600');
                    button.classList.add('bg-red-500', 'hover:bg-red-600');
                    
                    setTimeout(() => {
                        button.disabled = false;
                        button.innerHTML = originalContent;
                        button.classList.remove('bg-red-500', 'hover:bg-red-600');
                        button.classList.add('bg-primary-500', 'hover:bg-primary-600');
                    }, 2000);
                }
            });
        });
    </script>
} 